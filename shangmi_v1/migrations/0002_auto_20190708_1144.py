# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2019-07-08 11:44
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('shangmi_v1', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Active',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, verbose_name='活动名字')),
                ('detail_icon', models.CharField(max_length=255, null=True, verbose_name='详情图片')),
                ('icon', models.CharField(max_length=255, verbose_name='海报封面')),
                ('desc', models.TextField(verbose_name='活动描述')),
                ('rule', models.CharField(max_length=255, null=True, verbose_name='活动规则')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否活跃')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('give_money', models.IntegerField(verbose_name='活动给予积分')),
                ('share_give_money', models.IntegerField(null=True, verbose_name='分享成功所得积分')),
                ('is_fast', models.BooleanField(default=True, verbose_name='是否快速')),
                ('complete_num', models.IntegerField(default=0, verbose_name='完成量')),
                ('need_num', models.IntegerField(default=0, verbose_name='活动总量')),
                ('lat', models.DecimalField(decimal_places=15, max_digits=30, null=True, verbose_name='纬度')),
                ('lng', models.DecimalField(decimal_places=15, max_digits=30, null=True, verbose_name='经度')),
                ('address', models.CharField(max_length=255, null=True)),
                ('range', models.FloatField(default=3, verbose_name='活动允许范围km')),
                ('detail_url', models.CharField(max_length=255, null=True, verbose_name='详情页跳转')),
            ],
            options={
                'verbose_name': '活动表',
            },
        ),
        migrations.CreateModel(
            name='ActiveStoreMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('active', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shangmi_v1.Active', verbose_name='活动')),
            ],
            options={
                'verbose_name': '活动与门店关系表',
            },
        ),
        migrations.CreateModel(
            name='Balance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('money', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='余额')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='用户余额更新时间')),
            ],
            options={
                'verbose_name': '余额积分表',
            },
        ),
        migrations.CreateModel(
            name='BaoxianData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, verbose_name='人名')),
                ('phone', models.CharField(max_length=13, verbose_name='手机号')),
                ('idcard', models.CharField(db_index=True, max_length=30, verbose_name='身份证')),
                ('is_ok', models.BooleanField(default=False)),
                ('use_time', models.DateTimeField(auto_now=True, null=True, verbose_name='使用时间')),
                ('fail_msg', models.CharField(max_length=255, null=True, verbose_name='失败原因')),
                ('is_used', models.BooleanField(default=0, verbose_name='是否被使用')),
            ],
            options={
                'db_table': 'baoxian_data',
            },
        ),
        migrations.CreateModel(
            name='BaoxianData_1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, verbose_name='人名')),
                ('phone', models.CharField(max_length=13, verbose_name='手机号')),
                ('idcard', models.CharField(db_index=True, max_length=30, verbose_name='身份证')),
                ('is_ok', models.BooleanField(default=False)),
                ('use_time', models.DateTimeField(auto_now=True, null=True, verbose_name='使用时间')),
                ('fail_msg', models.CharField(max_length=255, null=True, verbose_name='失败原因')),
                ('is_used', models.BooleanField(default=0, verbose_name='是否被使用')),
            ],
            options={
                'db_table': 'baoxian_data_1',
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='优惠券名字')),
                ('money', models.IntegerField(verbose_name='优惠券面值')),
                ('can_use', models.IntegerField(verbose_name='使用条件')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('over_time', models.DateField(null=True, verbose_name='优惠券领取结束时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否活跃')),
                ('desc', models.CharField(max_length=255, verbose_name='积分描述')),
            ],
            options={
                'verbose_name': '门店积分券',
            },
        ),
        migrations.CreateModel(
            name='GetMoneyLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('money', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='金额')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('partner_trade_no', models.CharField(max_length=255, null=True, verbose_name='下单号')),
                ('is_ok', models.BooleanField(default=False)),
                ('payment_no', models.CharField(max_length=255, null=True)),
                ('target', models.CharField(default='微信零钱', max_length=50)),
            ],
            options={
                'verbose_name': '用户提现表',
            },
        ),
        migrations.CreateModel(
            name='ShangmiUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('openid', models.CharField(max_length=255, verbose_name='openid')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('nick_name', models.CharField(max_length=30, null=True, verbose_name='昵称')),
                ('source', models.CharField(max_length=30, verbose_name='用户来源')),
                ('icon', models.CharField(max_length=255, null=True)),
                ('union_id', models.CharField(max_length=255, null=True, verbose_name='联合主键')),
                ('gz_openid', models.CharField(max_length=255, null=True, verbose_name='公众号openid')),
                ('lat', models.DecimalField(decimal_places=15, max_digits=30, null=True, verbose_name='纬度')),
                ('lng', models.DecimalField(decimal_places=15, max_digits=30, null=True, verbose_name='经度')),
                ('name', models.CharField(max_length=30, null=True, verbose_name='用户姓名')),
                ('idcard', models.CharField(max_length=20, null=True, verbose_name='身份证')),
                ('phone', models.CharField(max_length=20, null=True, verbose_name='手机号')),
            ],
            options={
                'verbose_name': '用户数据',
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, verbose_name='店铺名')),
                ('address', models.CharField(max_length=255, null=True, verbose_name='地址')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否可用')),
                ('boss_phone', models.CharField(max_length=15, null=True, verbose_name='授权手机号')),
                ('notice', models.BooleanField(default=True, verbose_name='是否接收通知')),
                ('is_receive', models.BooleanField(default=False, verbose_name='语音通知状态')),
                ('free_date', models.DateField(null=True, verbose_name='免费使用到期时间')),
                ('balance', models.IntegerField(default=0, verbose_name='门店余额(分)')),
                ('get_money_pwd', models.CharField(max_length=255, null=True, verbose_name='提现密码')),
                ('get_money_phone', models.CharField(max_length=16, null=True, verbose_name='提现老板手机号')),
                ('boss', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='shangmi_v1.ShangmiUser', verbose_name='店老板')),
            ],
            options={
                'verbose_name': '门店',
            },
        ),
        migrations.CreateModel(
            name='StoreActiveBalance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.FloatField(default=0, verbose_name='活动金余额')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='参加时间')),
                ('store', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='shangmi_v1.Store', verbose_name='门店')),
            ],
        ),
        migrations.CreateModel(
            name='UserActiveLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('integral', models.IntegerField(verbose_name='当时所获积分')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='参加时间')),
                ('type', models.CharField(choices=[('join', '直接参加'), ('share', '分享获得')], max_length=10, verbose_name='奖励来源')),
                ('status', models.IntegerField(choices=[(0, '审核中'), (1, '审核通过'), (2, '审核失败')], default=0, verbose_name='审核状态')),
                ('active', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shangmi_v1.Active')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shangmi_v1.ShangmiUser')),
            ],
            options={
                'verbose_name': '用户获取积分记录表',
            },
        ),
        migrations.CreateModel(
            name='UserGetCoupon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='领取时间')),
                ('coupon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shangmi_v1.Coupon', verbose_name='优惠券')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shangmi_v1.ShangmiUser', verbose_name='用户')),
            ],
        ),
        migrations.CreateModel(
            name='UserPayLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('money', models.IntegerField(null=True, verbose_name='差价钱数')),
                ('integral', models.IntegerField(null=True, verbose_name='使用的积分数')),
                ('order_num', models.CharField(max_length=255, null=True, verbose_name='咱们自己的订单编号')),
                ('wx_pay_num', models.CharField(max_length=255, verbose_name='微信支付订单号')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('status', models.IntegerField(choices=[(0, '待完成'), (1, '已完成')], default=0, verbose_name='支付状态')),
                ('prepay_id', models.CharField(max_length=255, null=True)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shangmi_v1.Store', verbose_name='门店')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shangmi_v1.ShangmiUser', verbose_name='普通用户')),
            ],
            options={
                'verbose_name': '用户付款表',
            },
        ),
        migrations.CreateModel(
            name='UserRecharge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('money', models.FloatField(verbose_name='充值金额')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('is_ok', models.BooleanField(default=False, verbose_name='充值状态')),
                ('wx_pay_num', models.CharField(max_length=255, verbose_name='微信支付订单号')),
                ('recharge_type', models.CharField(default='账户余额', max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shangmi_v1.ShangmiUser', verbose_name='用户')),
            ],
            options={
                'verbose_name': '门店用户充值',
            },
        ),
        migrations.AddField(
            model_name='getmoneylog',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shangmi_v1.ShangmiUser', verbose_name='用户'),
        ),
        migrations.AddField(
            model_name='coupon',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shangmi_v1.Store', verbose_name='关联的门店'),
        ),
        migrations.AddField(
            model_name='balance',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='shangmi_v1.ShangmiUser', verbose_name='用户'),
        ),
        migrations.AddField(
            model_name='activestoremap',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shangmi_v1.Store', verbose_name='门店'),
        ),
        migrations.AlterIndexTogether(
            name='userpaylog',
            index_together=set([('user', 'store')]),
        ),
        migrations.AlterUniqueTogether(
            name='activestoremap',
            unique_together=set([('store', 'active')]),
        ),
    ]
